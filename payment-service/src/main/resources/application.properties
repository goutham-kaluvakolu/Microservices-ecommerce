spring.application.name=payment-service
server.port=8084



# --- Kafka Producer & Consumer Configuration ---

# Kafka Broker Address
spring.kafka.bootstrap-servers=localhost:9092


# Kafka topics order service publishes to

kafka.topic.payment.events.publish.name=payment_topic
kafka.topic.notification.events.publish.name=notification_topic

# Kafka topics order service subscribes to
kafka.topic.order.events.subscribe.names=inventory_topic
spring.kafka.consumer.properties.spring.json.value.default.type=com.shop.events.BaseEvent
# spring.kafka.consumer.properties.spring.json.trusted.packages=com.shop.events.*


# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.spring.json.use.type.headers=false

# Consumer Configuration
spring.kafka.consumer.group-id=payment-service-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
# spring.kafka.consumer.properties.spring.json.value.default.type=java.lang.Object
