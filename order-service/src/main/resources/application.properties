spring.application.name=order-service
server.port=8081
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/order_service
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# # --- Kafka Producer & Consumer Configuration ---
# # All services that send or receive events will need this.
# spring.kafka.bootstrap-servers=localhost:9092
# spring.kafka.template.default-topic=ordertest69
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# # Kafka Topic Configuration
# kafka.topic.order.events.name=order.events
# kafka.topic.order.events.partitions=1
# kafka.topic.order.events.replicas=1

# kafka.topic.inventory.failure.name=inventorytest69-failure
# kafka.topic.inventory.failure.partitions=1
# kafka.topic.inventory.failure.replicas=1

# spring.kafka.consumer.group-id=${order-service}-group 
# spring.kafka.consumer.auto-offset-reset=earliest 
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

